(window.webpackJsonp=window.webpackJsonp||[]).push([[101],{364:function(t,a,v){"use strict";v.r(a);var _=v(13),s=Object(_.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"http协议1-0、1-1、2-0区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http协议1-0、1-1、2-0区别"}},[t._v("#")]),t._v(" HTTP协议1.0、1.1、2.0区别")]),t._v(" "),a("h3",{attrs:{id:"http1-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http1-0"}},[t._v("#")]),t._v(" HTTP1.0")]),t._v(" "),a("p",[t._v("基本淘汰了，最基础的")]),t._v(" "),a("ul",[a("li",[t._v("最基础的 HTTP 协议")]),t._v(" "),a("li",[t._v("仅支持基本的 GET POST 方法")])]),t._v(" "),a("h3",{attrs:{id:"http1-1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http1-1"}},[t._v("#")]),t._v(" HTTP1.1")]),t._v(" "),a("p",[t._v("目前使用最多，拓展了功能性")]),t._v(" "),a("ul",[a("li",[t._v("支持新方法 DELETE PUT 等，可用于Restful API")]),t._v(" "),a("li",[t._v("缓存策略，catch-control  E-tag等")]),t._v(" "),a("li",[t._v("支持长连接 Connection keep-alive, 一次TCP连接多次请求")]),t._v(" "),a("li",[t._v("断点续传，状态码206")])]),t._v(" "),a("h3",{attrs:{id:"http-2-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-2-0"}},[t._v("#")]),t._v(" HTTP 2.0")]),t._v(" "),a("p",[t._v("需要普及推广，优化使用")]),t._v(" "),a("ul",[a("li",[t._v("可压缩header，减少体积")]),t._v(" "),a("li",[t._v("多路复用，一次TCP连接中可以多个HTTP并行请求")]),t._v(" "),a("li",[t._v("服务端推送")])])])}),[],!1,null,null,null);a.default=s.exports}}]);