(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{309:function(t,a,s){"use strict";s.r(a);var e=s(13),i=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"获取与创建项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取与创建项目"}},[t._v("#")]),t._v(" 获取与创建项目")]),t._v(" "),a("p",[t._v("获取Git项目仓库的方式通常有两种:")]),t._v(" "),a("p",[t._v("从其它服务器 克隆 一个已存在的 Git 仓库。")]),t._v(" "),a("ol",[a("li",[t._v("本地目录转换为Git仓库\n"),a("ul",[a("li",[t._v("新的项目")]),t._v(" "),a("li",[t._v("已存在的项目，但尚未有版本控制")])])]),t._v(" "),a("li",[t._v("克隆已存在的Git仓库\n"),a("ul",[a("li",[t._v("从其它服务器克隆到本地")]),t._v(" "),a("li",[t._v("可以是公开的，也可以是与别人合作某个私有项目")])])])]),t._v(" "),a("h4",{attrs:{id:"在已存在目录中初始化仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在已存在目录中初始化仓库"}},[t._v("#")]),t._v(" 在已存在目录中初始化仓库")]),t._v(" "),a("ol",[a("li",[t._v("使用当前目录作为 Git 仓库，我们只需使它初始化。命令执行完后会在当前目录生成一个 .git 目录。")])]),t._v(" "),a("div",{staticClass:"language-md extra-class"},[a("pre",{pre:!0,attrs:{class:"language-md"}},[a("code",[t._v("git init\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("使用我们指定目录作为Git仓库。初始化后，会在 "),a("code",[t._v("newproject")]),t._v(" 目录下会出现一个名为 .git 的目录，所有 Git 需要的数据和资源都存放在这个目录中。")])]),t._v(" "),a("div",{staticClass:"language-md extra-class"},[a("pre",{pre:!0,attrs:{class:"language-md"}},[a("code",[t._v("git init newproject\n")])])]),a("h4",{attrs:{id:"克隆现有的仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#克隆现有的仓库"}},[t._v("#")]),t._v(" 克隆现有的仓库")]),t._v(" "),a("p",[t._v("使用 "),a("code",[t._v("git clone")]),t._v(" 可以从现有 Git 仓库中拷贝项目。")]),t._v(" "),a("div",{staticClass:"language-md extra-class"},[a("pre",{pre:!0,attrs:{class:"language-md"}},[a("code",[t._v("git clone "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("参数说明：")]),t._v(" "),a("ul",[a("li",[t._v("url: Git 仓库")]),t._v(" "),a("li",[t._v("name: 自定义本地仓库的名字, 不写默认同步Git仓库的名称")])]),t._v(" "),a("p",[a("code",[t._v("示例：")])]),t._v(" "),a("div",{staticClass:"language-md extra-class"},[a("pre",{pre:!0,attrs:{class:"language-md"}},[a("code",[t._v("git clone git://github.com/schacon/grit.git mygrit\n")])])]),a("p",[t._v("执行命令后, 会把远程仓库克隆到本地, 且自定义目录名称为mygrit。")]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("克隆仓库使用示例")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/assets/git-images/init-clone.png"),alt:"克隆仓库示例"}})])])}),[],!1,null,null,null);a.default=i.exports}}]);