(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{313:function(s,r,e){"use strict";e.r(r);var t=e(13),a=Object(t.a)({},(function(){var s=this,r=s._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[r("h1",{attrs:{id:"jenkins构建失败找不到包问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#jenkins构建失败找不到包问题"}},[s._v("#")]),s._v(" jenkins构建失败找不到包问题")]),s._v(" "),r("h3",{attrs:{id:"问题描述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#问题描述"}},[s._v("#")]),s._v(" 问题描述")]),s._v(" "),r("p",[r("strong",[s._v("jenkins 构建 core-js 里面的某些包找不到导致构建失败，前一天还能正常构建")])]),s._v(" "),r("img",{attrs:{src:s.$withBase("/assets/issue-images/jenkins-error.png"),alt:"jenkins-error",width:"800"}}),s._v(" "),r("h3",{attrs:{id:"问题排查"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#问题排查"}},[s._v("#")]),s._v(" 问题排查")]),s._v(" "),r("p",[r("strong",[s._v("1. npm 查找发现 core-js 包在最近（7小时前）发布了新版本")])]),s._v(" "),r("img",{attrs:{src:s.$withBase("/assets/issue-images/corejs-publish.png"),alt:"corejs-publish",width:"800"}}),s._v(" "),r("p",[r("strong",[s._v("2. 本地装 core-js 发现没问题，node modules 里边包含了 jenkins 报错找不到的包，如下图。")])]),s._v(" "),r("img",{attrs:{src:s.$withBase("/assets/issue-images/corejs-local.png"),alt:"corejs-local",width:"800"}}),s._v(" "),r("p",[r("strong",[s._v("3. jenkins 尝试再次构建， 发现 node modules core-js 里边仍然找不到某些包")])]),s._v(" "),r("img",{attrs:{src:s.$withBase("/assets/issue-images/corejs-error.png"),alt:"corejs-error",width:"800"}}),s._v(" "),r("p",[r("strong",[s._v("4. 猜测")])]),s._v(" "),r("ul",[r("li",[s._v("先前发的版本有问题，发现之后删了该版本")]),s._v(" "),r("li",[s._v("然后重新发修复好的版本，两个版本号是一样的")]),s._v(" "),r("li",[s._v("jenkins构建时已经拉了有问题版本，所以构建失败")])]),s._v(" "),r("p",[r("strong",[s._v("5. 尝试通过以下两种方式，构建成功")])]),s._v(" "),r("h4",{attrs:{id:"方式一-删除缓存-重新装包-yarn-cache-clean-mirror"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#方式一-删除缓存-重新装包-yarn-cache-clean-mirror"}},[s._v("#")]),s._v(" 方式一：删除缓存，重新装包  yarn cache clean --mirror")]),s._v(" "),r("ol",[r("li",[s._v("execute shell comman 配置如下")])]),s._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v('# 改成私服registry，没有使用私服不用加这个 \nnpm config set registry "http://××.×.×.×:8081/repository/" \n\ncd frame\n\n# 固定脚本\n# 如果存在yarn.lock文件，才执行删除它\nif [ ! -f "yarn.lock" ];then\n    echo "yarn.lock文件不存在"\nelse\n    rm -f yarn.lock\nfi\n\n# 加上删除缓存\nyarn cache clean --mirror\n\n# 重新装包 构建\nyarn\nyarn build\n\n# npm config set registry http://registry.npmjs.org\n')])])]),r("ol",{attrs:{start:"2"}},[r("li",[r("p",[s._v("jenkins 点构建 重新构建一次，构建比较慢，最终构建成功，可以看到此时对应的包是完整没有缺失的"),r("br"),s._v(" "),r("img",{attrs:{src:s.$withBase("/assets/issue-images/corejs-success.png"),alt:"corejs-success",width:"800"}})])]),s._v(" "),r("li",[r("p",[s._v("构建成功后，记得删除"),r("code",[s._v("清除缓存指令")]),s._v("，否则每次构建都会执行，构建时长很长")])])]),s._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("# 加上删除缓存\nyarn cache clean --mirror\n")])])]),r("h3",{attrs:{id:"方式二"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#方式二"}},[s._v("#")]),s._v(" 方式二：")]),s._v(" "),r("ol",[r("li",[s._v("本地修改package.json  将core-js 包版本设置为更新前版本号")])]),s._v(" "),r("img",{attrs:{src:s.$withBase("/assets/issue-images/corejs-version.png"),alt:"corejs-version",width:"400"}}),s._v(" "),r("ol",{attrs:{start:"2"}},[r("li",[s._v("提交代码，jenkins再次构建, 可以看到此时对应的包也是完整没有缺失的")])]),s._v(" "),r("img",{attrs:{src:s.$withBase("/assets/issue-images/corejs-success.png"),alt:"corejs-success",width:"800"}}),s._v(" "),r("ol",{attrs:{start:"3"}},[r("li",[s._v("构建成功")])])])}),[],!1,null,null,null);r.default=a.exports}}]);