(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{315:function(v,_,t){"use strict";t.r(_);var i=t(13),e=Object(i.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h3",{attrs:{id:"git-介绍"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#git-介绍"}},[v._v("#")]),v._v(" Git 介绍")]),v._v(" "),_("h4",{attrs:{id:"认识-git"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#认识-git"}},[v._v("#")]),v._v(" 认识 Git")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("Git")]),v._v(" 是一个"),_("code",[v._v("开源")]),v._v("的"),_("code",[v._v("分布式版本控制系统")]),v._v("，用于"),_("code",[v._v("敏捷``高效地")]),v._v("处理任何或小或大的项目。")]),v._v(" "),_("li",[_("code",[v._v("Git")]),v._v(" 是 "),_("code",[v._v("Linus Torvalds")]),v._v(" 为了帮助管理 "),_("code",[v._v("Linux")]),v._v(" 内核开发而开发的一个开放源码的"),_("code",[v._v("版本控制软件")]),v._v("。")]),v._v(" "),_("li",[_("code",[v._v("Git")]),v._v(" 与常用的版本控制工具 "),_("code",[v._v("CVS")]),v._v(", "),_("code",[v._v("Subversion")]),v._v(" 等不同，它采用了"),_("code",[v._v("分布式版本库")]),v._v("的方式，不必服务器端软件支持。")])]),v._v(" "),_("h4",{attrs:{id:"git-与-svn-区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#git-与-svn-区别"}},[v._v("#")]),v._v(" Git 与 SVN 区别")]),v._v(" "),_("p",[_("code",[v._v("Git")]),v._v(" 不仅仅是个版本控制系统，它也是个"),_("code",[v._v("内容管理系统(CMS)")]),v._v("，"),_("code",[v._v("工作管理系统")]),v._v("等。\n"),_("code",[v._v("Git")]),v._v(" 与 "),_("code",[v._v("SVN")]),v._v(" 区别点：")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("版本控制系统")]),v._v(": Git 是分布式的，SVN 是非分布式，两者最核心的区别。")]),v._v(" "),_("li",[_("code",[v._v("内容存储方式")]),v._v("：Git 把内容按元数据方式存储，而 SVN 是按文件。所有的资源控制系统都是把文件的元信息隐藏在一个类似 .svn、.cvs 等的文件夹里。")]),v._v(" "),_("li",[_("code",[v._v("分支不同")]),v._v("：分支在 SVN 中一点都不特别，其实它就是版本库中的另外一个目录。")]),v._v(" "),_("li",[_("code",[v._v("全局的版本号")]),v._v(": Git 没有一个全局的版本号，而 SVN 有。")]),v._v(" "),_("li",[_("code",[v._v("Git完整性更优")]),v._v(": Git 的内容存储使用的是 SHA-1 哈希算法。这能确保代码内容的完整性，确保在遇到磁盘故障和网络问题时降低对版本库的破坏。")])]),v._v(" "),_("h4",{attrs:{id:"git-三种状态"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#git-三种状态"}},[v._v("#")]),v._v(" Git 三种状态")]),v._v(" "),_("p",[v._v("三种状态：已提交（committed）、已修改（modified） 和 已暂存（staged）。")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("已修改")]),v._v(": 修改了文件，但还没保存到数据库中。")]),v._v(" "),_("li",[_("code",[v._v("已暂存")]),v._v(": 对一个已修改文件的当前版本做了标记，使之包含在下次提交的快照中。")]),v._v(" "),_("li",[_("code",[v._v("已提交")]),v._v(": 数据已经安全地保存在本地数据库中。")])]),v._v(" "),_("p",[v._v("这会让我们的 Git 项目拥有三个阶段：工作区、暂存区以及 Git 目录")]),v._v(" "),_("h4",{attrs:{id:"git-工作区、暂存区和git-目录"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#git-工作区、暂存区和git-目录"}},[v._v("#")]),v._v(" Git 工作区、暂存区和Git 目录")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("工作区")]),v._v("：电脑本地里看到的目录。")]),v._v(" "),_("li",[_("code",[v._v("暂存区")]),v._v("：英文叫 stage 或 index。一般存放在 .git 目录下的 index 文件（.git/index）中，所以我们把暂存区有时也叫作索引（index）。")]),v._v(" "),_("li",[_("code",[v._v("版本库")]),v._v("：工作区有一个隐藏目录 .git，这个不算工作区，而是 Git 的版本库。")])]),v._v(" "),_("h4",{attrs:{id:"git-工作流程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#git-工作流程"}},[v._v("#")]),v._v(" Git 工作流程")]),v._v(" "),_("p",[v._v("一般工作流程如下：")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("克隆")]),v._v(" Git 资源作为工作目录，即"),_("code",[v._v("工作区")]),v._v("。")]),v._v(" "),_("li",[v._v("在克隆的资源上"),_("code",[v._v("添加")]),v._v("或"),_("code",[v._v("修改")]),v._v("文件。")]),v._v(" "),_("li",[v._v("如果其他人修改了，你可以"),_("code",[v._v("更新")]),v._v("资源。")]),v._v(" "),_("li",[_("code",[v._v("暂存")]),v._v("修改（可选择性暂存），添加到"),_("code",[v._v("暂存区")]),v._v("。")]),v._v(" "),_("li",[v._v("在提交前"),_("code",[v._v("查看")]),v._v("修改。")]),v._v(" "),_("li",[_("code",[v._v("提交")]),v._v("修改。")]),v._v(" "),_("li",[v._v("在修改完成后，如果发现错误，可以"),_("code",[v._v("撤回")]),v._v("提交并"),_("code",[v._v("再次修改")]),v._v("并提交。")])])])}),[],!1,null,null,null);_.default=e.exports}}]);